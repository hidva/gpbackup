---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
# - name: nightly-trigger
#   type: time
#   source:
#     location: America/Los_Angeles
#     days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday]
#     start: 6:00 AM
#     stop: 7:00 AM

- name: icw_gporca_centos6_dump
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{test-data-bucket-name}}
    secret_access_key: {{bucket-secret-access-key}}
    region_name: {{aws-region}}
    versioned_file: gpdb6/icw_gporca_centos6/dump.sql.xz

- name: regression_dump
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{test-data-bucket-name}}
    secret_access_key: {{bucket-secret-access-key}}
    region_name: {{aws-region}}
    versioned_file: gpdb6/icw_gporca_centos6/regression_dump.sql.xz

- name: backup_artifact_resource
  type: s3
  source:
    access_key_id: {{bucket-access-key-id}}
    bucket: {{test-data-bucket-name}}
    secret_access_key: {{bucket-secret-access-key}}
    region_name: {{aws-region}}
    versioned_file: gpdb6/icw_gporca_centos6/gpbackup_all.tar.gz

- name: gpbackup
  type: git
  source:
    uri: https://github.com/greenplum-db/gpbackup
    branch: {{gpbackup-git-branch}}

- name: gpdb_src
  type: git
  source:
    uri: https://github.com/greenplum-db/gpdb
    branch: master

- name: bin_gpdb6
  type: gcs
  source:
      bucket: ((gcs-bucket))
      json_key: ((concourse-gcs-resources-service-account-key))
      regexp: server/published/gpdb6/server-rc-(.*)-rhel6_x86_64((rc-build-type-gcs)).tar.gz

- name: gpbackup-dependencies
  type: s3
  source:
      bucket: gpbackup-dependencies
      versioned_file: gpbackup-dependencies/dependencies.tar.gz
      region_name: us-west-2
      access_key_id: {{bucket-access-key-id}}
      secret_access_key: {{bucket-secret-access-key}}

- name: ccp_src
  type: git
  source:
    branch: {{ccp-git-branch}}
    private_key: {{ccp-git-key}}
    uri: {{ccp-git-remote}}

- name: terraform
  type: terraform
  source:
    env:
      AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
      GOOGLE_CREDENTIALS: {{google-service-account-key}}
    vars:
      project_id: {{google-project-id}}
    storage:
      access_key_id: {{tf-machine-access-key-id}}
      secret_access_key: {{tf-machine-secret-access-key}}
      region_name: {{aws-region}}
      bucket: {{tf-bucket-name}}
      bucket_path: clusters-google/

- name: dummy_seclabel
  type: s3
  source:
    access_key_id: {{gpdb4-bucket-access-key-id}}
    bucket: {{dpm_bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{gpdb4-bucket-secret-access-key}}
    versioned_file: dummy_seclabel.so

jobs:
- name: build_dependencies
  plan:
  - aggregate:
    - get: gpbackup
      trigger: true
    - get: gpbackup-dependencies
    # - get: nightly-trigger
    #   trigger: true
  - task: build-dependencies
    file: gpbackup/ci/tasks/build-dependencies.yml
    attempts: 5
  - put: gpbackup-dependencies
    params:
        file: output_deps/dependencies.tar.gz

- name: gpbackup-gpdb6-ICW-regression-DB
  plan:
  - aggregate:
    - get: gpbackup
      #trigger: true
    - get: bin_gpdb6
    - get: gpdb_src
    - get: ccp_src
    - get: icw_gporca_centos6_dump
    - get: dummy_seclabel
    - get: gpbackup-dependencies
    # - get: nightly-trigger
    #   trigger: true
      passed:
       - build_dependencies
  # - put: terraform
  #   params:
  #     <<: *ccp_default_params
  #     vars:
  #       <<: *ccp_default_vars
  # - task: gen_cluster
  #   file: ccp_src/ci/tasks/gen_cluster.yml
  #   params:
  #     <<: *ccp_gen_cluster_default_params
  #   input_mapping:
  #     gpdb_binary: bin_gpdb
  #     gpdb_src: gpdb_src
  # - task: gpinitsystem
  #   file: ccp_src/ci/tasks/gpinitsystem.yml
  # - task: setup-centos-env
  #   file: gpbackup/ci/tasks/setup-centos-env-gpdb6.yml
  - task: load_regressionDB_into_cluster
    file: gpbackup/ci/tasks/gpbackup-regression.yml
    input_mapping:
      sqldump: icw_gporca_centos6_dump
  - put: backup_artifact_resource
    params:
      file: artifacts/gpbackup_regression_data.tar.gz
  - put: regression_dump
    params:
      file: artifacts/regression_dump.sql.xz
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

- name: gprestore-gpdb6-ICW-regression-DB
  plan:
  - aggregate:
    - get: gpbackup
    - get: bin_gpdb6
    - get: gpdb_src
    - get: ccp_src
    - get: icw_gporca_centos6_dump
    - get: backup_artifact_resource
      passed:
       - gpbackup-gpdb6-ICW-regression-DB
    - get: regression_dump
      passed:
       - gpbackup-gpdb6-ICW-regression-DB
      trigger: true
    - get: dummy_seclabel
    - get: gpbackup-dependencies
      passed:
       - build_dependencies
  - put: terraform
    params:
      <<: *ccp_default_params
      vars:
        <<: *ccp_default_vars
  - task: gen_cluster
    file: ccp_src/ci/tasks/gen_cluster.yml
    params:
      <<: *ccp_gen_cluster_default_params
    input_mapping:
      gpdb_binary: bin_gpdb6
      gpdb_src: gpdb_src
  - task: gpinitsystem
    file: ccp_src/ci/tasks/gpinitsystem.yml
  - task: setup-centos-env
    file: gpbackup/ci/tasks/setup-centos-env-gpdb6.yml
  - task: restore_regression_artifact_into_cluster
    file: gpbackup/ci/tasks/gprestore-regression.yml
    input_mapping: {sqldump: icw_gporca_centos6_dump}
    on_success:
      <<: *ccp_destroy
  ensure:
    <<: *set_failed

ccp_default_params_anchor: &ccp_default_params
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/google/

ccp_vars_anchor: &ccp_default_vars
  instance_type: n1-standard-1
  PLATFORM: centos6

ccp_gen_cluster_default_params_anchor: &ccp_gen_cluster_default_params
  AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: clusters-google/
  BUCKET_NAME: {{tf-bucket-name}}
  CLOUD_PROVIDER: google

ccp_destroy_anchor: &ccp_destroy
  put: terraform
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/google/
    vars:
      aws_instance-node-instance_type: t2.micro
      aws_ebs_volume_type: standard
      instance_type: n1-standard-1
  get_params:
    action: destroy

ccp_nvme_destroy_anchor: &ccp_destroy_nvme
  put: terraform
  params:
    action: destroy
    env_name_file: terraform/name
    terraform_source: ccp_src/google-nvme-block-device/
    vars:
      aws_instance-node-instance_type: t2.micro
      aws_ebs_volume_type: standard
      instance_type: n1-standard-1
  get_params:
    action: destroy

set_failed_anchor: &set_failed
  do:
  - task: on_failure_set_failed
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pivotaldata/ccp
          tag: "7"
      inputs:
        - name: ccp_src
        - name: terraform
      run:
        path: 'ccp_src/google/ccp_failed_test.sh'
      params:
        GOOGLE_CREDENTIALS: {{google-service-account-key}}
        GOOGLE_PROJECT_ID: {{google-project-id}}
        GOOGLE_ZONE: {{google-zone}}
        GOOGLE_SERVICE_ACCOUNT: {{google-service-account}}
        AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
        AWS_DEFAULT_REGION: {{tf-machine-region}}
        BUCKET_PATH: clusters-google/
        BUCKET_NAME: {{tf-bucket-name}}

ccp_default_params_aws_anchor: &ccp_default_params_aws
  action: create
  delete_on_failure: true
  generate_random_name: true
  terraform_source: ccp_src/aws/

ccp_vars_anchor_aws: &ccp_default_vars_aws
  aws_instance-node-instance_type: t2.medium
  PLATFORM: centos6

ccp_gen_cluster_default_params_anchor_aws: &ccp_gen_cluster_default_params_aws
  AWS_ACCESS_KEY_ID: {{tf-machine-access-key-id}}
  AWS_SECRET_ACCESS_KEY: {{tf-machine-secret-access-key}}
  AWS_DEFAULT_REGION: {{aws-region}}
  BUCKET_PATH: clusters-aws/
  BUCKET_NAME: {{tf-bucket-name}}
  CLOUD_PROVIDER: aws
