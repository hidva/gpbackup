platform: linux

params:
  REQUIRES_DUMMY_SEC:

inputs:
- name: gpdb_src
- name: bin_gpdb
- name: gpbackup
- name: dummy_seclabel
  optional: true
- name: gpbackup-dependencies
- name: gppkgs

run:
  path: bash
  args:
  - -c
  - |
    set -ex
    if [ ! -f bin_gpdb/bin_gpdb.tar.gz ] ; then
      mv bin_gpdb/*.tar.gz bin_gpdb/bin_gpdb.tar.gz
    fi

    source gpdb_src/concourse/scripts/common.bash
    time install_gpdb
    time ./gpdb_src/concourse/scripts/setup_gpadmin_user.bash
    time make_cluster

    source /usr/local/greenplum-db-devel/greenplum_path.sh

    if [ "$REQUIRES_DUMMY_SEC" = true ] ; then
      # dummy security label: copy library from bucket to correct location
      # (someday this will be part of the bin_gpdb tarball?)
      mkdir -p "$GPHOME/postgresql"
      install -m 755 -T dummy_seclabel/dummy_seclabel*.so "$GPHOME/lib/postgresql/dummy_seclabel.so"
    fi

    # copy gpbackup & deps into the GOPATH used by user "gpadmin"
    export GOPATH=/home/gpadmin/go
    mkdir -p $GOPATH/src/github.com/greenplum-db
    cp -R gpbackup $GOPATH/src/github.com/greenplum-db/
    tar -zxf gpbackup-dependencies/dependencies.tar.gz -C $GOPATH/src/github.com/greenplum-db/gpbackup/
    chown -R gpadmin $GOPATH

    cat <<SCRIPT > /tmp/run_tests.bash
    #!/bin/bash
    set -ex
    cd ~
    source /usr/local/greenplum-db-devel/greenplum_path.sh

    # use "temp build dir" of parent shell
    source $(pwd)/gpdb_src/gpAux/gpdemo/gpdemo-env.sh
    export GOPATH=\$HOME/go
    mkdir -p \$GOPATH/bin
    mkdir -p \$GOPATH/src
    # reference PATH defined by parent shell
    export PATH=/usr/local/go/bin:$PATH:\$PATH:\$GOPATH/bin

    if [ "$REQUIRES_DUMMY_SEC" = true ] ; then
      # sec label
      gpconfig -c shared_preload_libraries -v dummy_seclabel
      gpstop -ra
      gpconfig -s shared_preload_libraries | grep dummy_seclabel
    fi

    # Install gpbackup gppkg
    out=\$(psql postgres -c "select version();")
    gpdbversion=\$(echo \$out | sed -n 's/.*Greenplum Database \([0-9]\).*/\1/p')
    mkdir /tmp/untarred
    tar -xzf gppkgs/gpbackup-gppkgs.tar.gz -C /tmp/untarred

    # only install if not installed already
    is_installed_output=\$(gppkg -q /tmp/untarred/gpbackup*gp\$gpdbversion*.gppkg)
    set +e
    echo \$is_installed_output | grep 'is installed'
    if [ \$? -ne 0 ] ; then
      set -e
      gppkg -i /tmp/untarred/gpbackup*gp\$gpdbversion*.gppkg
    fi
    set -e

    # Build gpbackup
    pushd \$GOPATH/src/github.com/greenplum-db/gpbackup
      make depend
      # make build
      make unit
      make integration
      make end_to_end
    popd

    SCRIPT

    cp -r gppkgs /home/gpadmin
    chmod +x /tmp/run_tests.bash
    su - gpadmin bash -c /tmp/run_tests.bash
